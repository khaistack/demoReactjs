{"version":3,"sources":["components/create.component.js","components/edit.component.js","components/TableRow.js","components/index.component.js","App.js","serviceWorker.js","index.js"],"names":["Create","props","onChangeName","bind","onChangeCompany","onChangeAge","onSubmit","state","name","company","age","e","this","setState","target","value","preventDefault","obj","axios","post","then","res","console","log","data","style","marginTop","className","type","onChange","Component","Edit","TableRow","Index","persons","get","response","catch","error","map","object","i","key","align","colSpan","tabRow","App","id","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.37517b6f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class Create extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeCompany = this.onChangeCompany.bind(this);\n        this.onChangeAge = this.onChangeAge.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n\n        this.state = {\n            name: '',\n            company: '',\n            age:''\n        }\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    onChangeCompany(e) {\n        this.setState({\n            company: e.target.value\n        });\n    }\n\n    onChangeAge(e) {\n        this.setState({\n            age: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const obj = {\n            name: this.state.name,\n            company: this.state.company,\n            age: this.state.age\n        };\n        axios.post('http://localhost:4000/persons/add', obj)\n            .then(res => console.log(res.data));\n\n        this.setState({\n            name: '',\n            company: '',\n            age: ''\n        })\n    }\n\n    render() {\n        return (\n            <div style={{marginTop: 10}}>\n                <h3>Add New Person</h3>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>Person Name: </label>\n                        <input type=\"text\" className=\"form-control\"\n                               value={this.state.name}\n                               onChange={this.onChangeName}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Company Name: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.company}\n                               onChange={this.onChangeCompany}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Age: </label>\n                        <input type=\"text\" className=\"form-control\" value={this.state.age}\n                               onChange={this.onChangeAge}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Register Person\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nexport default class Edit extends Component {\n    render() {\n        return (\n            <div>\n                <p>Welcome to Edit Component!!</p>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\n\nclass TableRow extends Component {\n    render() {\n        console.log(this.props)\n        return (\n            <tr>\n                <td>\n                    {this.props.obj.name}\n                </td>\n                <td>\n                    {this.props.obj.company}\n                </td>\n                <td>\n                    {this.props.obj.age}\n                </td>\n                <td>\n                    <button className=\"btn btn-primary\">Edit</button>\n                </td>\n                <td>\n                    <button className=\"btn btn-danger\">Delete</button>\n                </td>\n            </tr>\n        );\n    }\n}\n\nexport default TableRow;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport TableRow from './TableRow';\n\nexport default class Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            persons: []\n        };\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:3000/user')\n            .then(response => {\n                console.log(response.data);\n                this.setState({persons: response.data});\n            })\n            .catch(function (error) {\n                console.log(error);\n            })\n    }\n\n    tabRow() {\n        return this.state.persons.map(function (object, i) {\n            return <TableRow obj={object} key={i}/>;\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h3 align=\"center\">Persons List</h3>\n                <table className=\"table table-striped\" style={{marginTop: 20}}>\n                    <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>Company</th>\n                        <th>Age</th>\n                        <th colSpan=\"2\">Action</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.tabRow()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\n\nimport Create from './components/create.component';\nimport Edit from './components/edit.component';\nimport Index from './components/index.component';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n                <div className=\"container\">\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav mr-auto\">\n                                <li className=\"nav-item\">\n                                    <Link to={'/'} className=\"nav-link\">Home</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to={'/create'} className=\"nav-link\">Create</Link>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <Link to={'/index'} className=\"nav-link\">ListElement</Link>\n                                </li>\n                            </ul>\n                        </div>\n                    </nav>\n                    <br/>\n                    <Switch>\n                        <Route exact path='/create' component={Create}/>\n                        <Route path='/edit/:id' component={Edit}/>\n                        <Route path='/index' component={Index}/>\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}